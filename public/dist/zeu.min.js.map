{"version":3,"sources":["webpack://zeu/webpack/universalModuleDefinition","webpack://zeu/webpack/bootstrap","webpack://zeu/./src/color.js","webpack://zeu/./src/base-component.js","webpack://zeu/./src/utility.js","webpack://zeu/./src/settings.js","webpack://zeu/./src/global.js","webpack://zeu/./src/animation-timer.js","webpack://zeu/./src/score-board.js","webpack://zeu/./src/hex-grid.js","webpack://zeu/./src/network-graph.js","webpack://zeu/./src/text-box.js","webpack://zeu/./src/speed-circle.js","webpack://zeu/./src/text-meter.js","webpack://zeu/./src/message-queue.js","webpack://zeu/./src/heartbeat.js","webpack://zeu/./src/volume-meter.js","webpack://zeu/./src/round-fan.js","webpack://zeu/./src/digital-symbol.js","webpack://zeu/./src/digital-clock.js","webpack://zeu/./src/shape.js","webpack://zeu/./src/bar-meter.js","webpack://zeu/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","lightGreen","lightWhite","lightGrey","lightBlack","black","white","red","blue","yellow","cyan","grey","green","orange","transparent","_global","_utility","_interopRequireDefault","_shape","_color","BaseComponent","canvas","options","arguments","length","undefined","viewWidth","viewHeight","_classCallCheck","this","_canvas","document","getElementById","_ctx","getContext","_x","_y","_viewWidth","_viewHeight","_scaleX","_scaleY","canvasHeight","height","parentNode","clientHeight","scaleByHeight","_display","_eventQueue","drawFrame","default","alert","on","lastCall","dashOffSet","text","interval","lineColor","COLOR","fontColor","bgColor","_alert","alertFunc","setOptions","postConstructor","removeFromAnimationQueue","addToAnimationQueue","event","type","destX","destY","shift","getNextPos","speedX","speedY","isDisplay","clear","save","drawObject","restore","isAlert","nextAlert","clearRect","_width","_height","scale","getAnimationFrameArrayPos","GLOBAL","requestAnimationFrameArray","push","drawFrameObj","index","splice","func","self","_this","findIndex","obj","id","lastAlert","now","Date","fillRect","setLineDash","lineDashOffset","lineWidth","strokeStyle","strokeRect","fillText","params","duration","srcX","srcY","speed","sX","Math","abs","sY","x","y","Utility","min","max","floor","random","toString","h","setHours","getHours","date","PI","getSeconds","getMilliseconds","degree","hex","opacity","replace","parseInt","substring","color","isNaN","round","charAt","rgb","colorStart","colorEnd","colorCount","start","hexToRgb","end","len","alpha","rt","convertToHex","curr","dest","a","j","temp","_animationTimer","Settings","_fps","fps","setFps","_settings","AnimationTimer","render","_fpsInterval","_lastFrame","requestAnimationFrame","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","elapsed","_baseComponent","ScoreBoard","_possibleConstructorReturn","__proto__","getPrototypeOf","_rows","_rowHeight","rowHeight","_space","space","_font","font","_speed","_order","order","sort","b","score","row","xOffset","yOffset","moveType","isSort","isFound","HexGrid","_nodes","_radius","radius","_border","border","_this2","w","pow","forEach","drawHex","borderColor","blink","beginPath","moveTo","lineTo","closePath","stroke","fillStyle","fill","node","isExist","NetworkGraph","_signalQueues","nodes","neighbors","neighbor","destNode","getNodeById","edge","edgeWidth","width","edgeColor","edgeDash","dash","line","toDelete","signal","fillCircle","size","textValue","textColor","textFont","xTextOffset","yTextOffset","nodeId","find","_this$_nodes","apply","_toConsumableArray","from","srcNode","to","TextBox","_borderWidth","_borderHeight","_waveY","_waveSpeed","_isWaveOn","_textValue","textBgColor","waveColor","textAlign","SpeedCircle","_degree1","_degree2","_degree3","_degree4","c1","circle1","c2","circle2","c3","circle3","c4","circle4","speed1","color1","speed2","color2","speed3","color3","speed4","color4","getNextAngleByDegree","a1","getAngleByDegree","a2","a3","a4","translate","rotate","arc","cos","sin","x1","y1","x2","y2","TextMeter","_lineWidth","_arrowWidth","_pctHeight","_actualPctHeight","_meterWidth","_meterHeight","_middleBarHeight","_barX","_percentageValue","_nextBarX","_arrow","_arrowSpeed","_leftArrowX","_rightArrowX","bar","marker","markerBgColor","markerFontColor","fillColor","_lineColor","displayValue","arrowColor","globalCompositeOperation","rect","clip","drawLeftArrow","drawRightArrow","fillTriangle","MessageQueue","_queue","_arcWidth","_barHeight","barHeight","_maxQueueCapacity","maxQueueCapacity","bars","drawQueueSize","q","currY","quadraticCurveTo","param","barColor","barSpace","pop","Heartbeat","_lastSec","_timer","drawSeconds","_fontColor","_get","tick","clearInterval","beatColor","beatSpace","time","setInterval","currSec","leftPadZero","getMinutes","VolumeMeter","_numberHeight","_minMax","_numberStart","_actualValue","_value","_barY","_minValue","_maxValue","_nextBarY","_minFontColor","_minBgColor","_maxFontColor","_maxBgColor","_barBorderColor","barFillColor","_isGraident","graident","_markerFontColor","barFillStyle","createLinearGradient","addColorStop","drawMin","drawMax","drawMarker","RoundFan","_degree","center","fanColor","centerColor","centerBgColor","angle","DigitalSymbol","ctx","barWidth","numberWidth","numberHeight","dashColor","numberColor","_barWidth","_verBarHeight","_horBarHeight","_dashColor","_numberColor","topLeft","bottomLeft","topRight","bottomRight","top","middle","bottom","number","drawEmpty","_digitalSymbol","DigitalClock","canavs","_numberWidth","_ds","_hourOffset","hourOffset","stopTick","drawTime","addHour","drawTwoDigits","drawColon","digitalNumber","drawNumber","left","right","Shape","x3","y3","BarMeter","_currBar","_numberOfBars","_min","_max","_barMax","_isGradient","gradient","colors","generateGradientColor","_barMeter","_digitalClock","_roundFan","_volumeMeter","_heartbeat","_messageQueue","_textMeter","_speedCircle","_textBox","_networkGraph","_hexGrid","_scoreBoard"],"mappings":"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","file":"zeu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zeu\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zeu\"] = factory();\n\telse\n\t\troot[\"zeu\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","\r\nlet COLOR = {\r\n  lightGreen: '#00d7af',\r\n  lightWhite: '#f8f8ff',\r\n  lightGrey: '#e0e0e0',\r\n  lightBlack: '#343a42',\r\n  black: '#000000',\r\n  white: '#ffffff',\r\n  red: '#dc3547',\r\n  blue: '#007bfb',\r\n  yellow: '#ffc108',\r\n  cyan: '#17a2b9',\r\n  grey: '#6c757e',\r\n  green: '#28a748',\r\n  orange: '#ffa500',\r\n  transparent: 'rgba(255, 255, 255, 0)'\r\n};\r\n\r\nexport { COLOR };\r\n","import { GLOBAL } from './global';\r\nimport Utility from './utility';\r\nimport Shape from './shape';\r\nimport { COLOR } from './color';\r\n\r\nexport default class BaseComponent {\r\n\r\n  constructor(canvas, options = {}, viewWidth, viewHeight) {\r\n    // Canvas\r\n    this._canvas = document.getElementById(canvas);\r\n\r\n    // Canvas 2d context\r\n    this._ctx = this._canvas.getContext('2d');\r\n\r\n    // Current X value (Left 0 to right)\r\n    this._x = 0;\r\n\r\n    // Current Y value (Top 0 to bottom)\r\n    this._y = 0;\r\n\r\n    // The width and height used to draw the component.\r\n    this._viewWidth = viewWidth;\r\n    this._viewHeight = viewHeight;\r\n\r\n    // Scale parameters used in scale()\r\n    this._scaleX = 1;\r\n    this._scaleY = 1;\r\n\r\n    // Get canvas height\r\n    const canvasHeight = this._canvas.height || this._canvas.parentNode.clientHeight || viewHeight;\r\n\r\n    // Set acutal width and height of the component based on scales.\r\n    this.scaleByHeight(canvasHeight);\r\n\r\n    this._display = true;\r\n\r\n    // Event queue that stores animation movements like 'move', 'scale', 'display' and etc.\r\n    this._eventQueue = [];\r\n\r\n    // Bind the drawFrame function.\r\n    this.drawFrame = this.drawFrame.bind(this);\r\n\r\n    // Init Shape instance.\r\n    this._shape = new Shape(this._ctx);\r\n\r\n    let alert = {\r\n      on: false,\r\n      lastCall: 0,\r\n      dashOffSet: 0,\r\n      text: '',\r\n      interval: 1500,\r\n      lineColor: COLOR.red,\r\n      fontColor: COLOR.red,\r\n      bgColor: COLOR.yellow\r\n    };\r\n\r\n    this._alert = alert;\r\n    this.alertFunc = this.alertFunc.bind(this);\r\n\r\n    // Set options\r\n    this.setOptions(options);\r\n\r\n    // Post constructor.\r\n    this.postConstructor();\r\n  }\r\n\r\n  // ********** INTERNAL API **********\r\n  setOptions(options) {}\r\n\r\n  postConstructor() {\r\n    this.removeFromAnimationQueue();\r\n    this.addToAnimationQueue();\r\n  }\r\n\r\n  drawFrame() {\r\n    // Check movement\r\n    if (this._eventQueue.length > 0) {\r\n      const event = this._eventQueue[0];\r\n\r\n      if (event.type === 'move') {\r\n        if (this._x === event.destX && this._y === event.destY) {\r\n          this._eventQueue.shift();\r\n        } else {\r\n          this._x = Utility.getNextPos(this._x, event.destX, event.speedX);\r\n          this._y = Utility.getNextPos(this._y, event.destY, event.speedY);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check display or not.\r\n    if (!this.isDisplay()) {\r\n      return;\r\n    }\r\n\r\n    this.clear();\r\n\r\n    this.save();\r\n    this.drawObject();\r\n    this._ctx.restore();\r\n\r\n    if (this.isAlert()) {\r\n      this.save();\r\n      this._alert.lastCall = this.nextAlert(this.alertFunc, this._alert.lastCall, this._alert.interval);\r\n      this._ctx.restore();\r\n    }\r\n  }\r\n\r\n  drawObject() {}\r\n\r\n  clear() {\r\n    this._ctx.clearRect(this._x, this._y, this._width, this._height);\r\n  }\r\n\r\n  scale() {\r\n    this._ctx.scale(this._scaleX, this._scaleY);\r\n  }\r\n\r\n  save() {\r\n    this._ctx.save();\r\n    this.scale();\r\n  }\r\n\r\n  addToAnimationQueue() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index === -1) {\r\n      GLOBAL.requestAnimationFrameArray.push(this.drawFrameObj());\r\n    }\r\n  }\r\n\r\n  removeFromAnimationQueue() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index !== -1) {\r\n      GLOBAL.requestAnimationFrameArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  drawFrameObj() {\r\n    return {\r\n      func: this.drawFrame,\r\n      self: this\r\n    };\r\n  }\r\n\r\n  getAnimationFrameArrayPos() {\r\n    return GLOBAL.requestAnimationFrameArray.findIndex(obj => obj.self._canvas.id === this._canvas.id);\r\n  }\r\n\r\n  get isAnimationOn() {\r\n    return this.getAnimationFrameArrayPos() !== -1;\r\n  }\r\n\r\n  nextAlert(alertFunc, lastAlert, interval) {\r\n    const now = Date.now();\r\n\r\n    if (now - lastAlert < interval) {\r\n      alertFunc.call();\r\n      return lastAlert;\r\n    } else if (now - lastAlert < (interval * 2)) {\r\n      return lastAlert;\r\n    }\r\n    return now;\r\n  }\r\n\r\n  alertFunc() {\r\n    this._shape.fillRect(this._x, this._y, this._width, this._height, this._alert.bgColor);\r\n\r\n    this._ctx.setLineDash([20, 16]);\r\n    this._ctx.lineDashOffset = -this._alert.dashOffSet;\r\n    this._ctx.lineWidth = 20;\r\n    this._ctx.strokeStyle = this._alert.lineColor;\r\n    this._ctx.strokeRect(this._x, this._y, this._width, this._height);\r\n\r\n    this._alert.dashOffSet++;\r\n    if (this._alert.dashOffSet > 32) {\r\n      this._alert.dashOffSet = 0;\r\n    }\r\n\r\n    this._shape.fillText(this._alert.text, (this._width - this._x) / 2, (this._height - this._y) / 2 + 10,\r\n      'Bold 30px Arial', 'center', this._alert.fontColor);\r\n  }\r\n\r\n  // ********** EXTERNAL API **********\r\n  /**\r\n   * Destroy.\r\n   */\r\n  destroy() {\r\n    this.removeFromAnimationQueue();\r\n    this.clear();\r\n    this._canvas = null;\r\n    this._ctx = null;\r\n    this._alert = null;\r\n  }\r\n\r\n  /**\r\n   * Turn on alert.\r\n   */\r\n  alertOn(params = {}) {\r\n    this._alert.text = params.text || 'ALERT';\r\n    this._alert.interval = params.interval || 1500;\r\n    this._alert.bgColor = params.bgColor || COLOR.yellow;\r\n    this._alert.fontColor = params.fontColor || COLOR.red;\r\n    this._alert.lineColor = params.lineColor || COLOR.red;\r\n    this._alert.on = true;\r\n  }\r\n\r\n  /**\r\n   * Turn off alert.\r\n   */\r\n  alertOff() {\r\n    this._alert.on = false;\r\n  }\r\n\r\n  isAlert() {\r\n    return this._alert.on;\r\n  }\r\n\r\n  moveTo(destX, destY, duration) {\r\n    let srcX = this._x;\r\n    let srcY = this._y;\r\n\r\n    // Find last move event.\r\n    for (let i = (this._eventQueue.length - 1); i >= 0; i--) {\r\n      const event = this._eventQueue[i];\r\n\r\n      if (event.type === 'move') {\r\n        srcX = event.destX;\r\n        srcY = event.destY;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Calculate the speed.\r\n    const speed = duration / 60;\r\n    const sX = Math.abs(destX - srcX) / speed;\r\n    const sY = Math.abs(destY - srcY) / speed;\r\n    const speedX = destX > srcX ? sX : -sX;\r\n    const speedY = destY > srcY ? sY : -sY;\r\n\r\n    // Push the movement to the queue.\r\n    this._eventQueue.push({\r\n      type: 'move',\r\n      destX: destX,\r\n      destY: destY,\r\n      speedX: speedX,\r\n      speedY: speedY\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  scaleTo(x, y) {\r\n    this._scaleX = x;\r\n    this._scaleY = y;\r\n    this._width = this._scaleX * this._viewWidth;\r\n    this._height = this._scaleY * this._viewHeight;\r\n    return this;\r\n  }\r\n\r\n  scaleByHeight(height) {\r\n    this._scaleY = height / this._viewHeight;\r\n    this._scaleX = this._scaleY;\r\n    this._width = this._scaleX * this._viewWidth;\r\n    this._height = this._scaleY * this._viewHeight;\r\n    return this;\r\n  }\r\n\r\n  show() {\r\n    this._display = true;\r\n  }\r\n\r\n  hide() {\r\n    this._display = false;\r\n  }\r\n\r\n  isDisplay() {\r\n    return this._display;\r\n  }\r\n\r\n  get canvas() {\r\n    return this._canvas;\r\n  }\r\n\r\n  get context() {\r\n    return this._ctx;\r\n  }\r\n\r\n  get eventQueue() {\r\n    return this._eventQueue;\r\n  }\r\n\r\n  get viewWidth() {\r\n    return this._viewWidth;\r\n  }\r\n\r\n  get viewHeight() {\r\n    return this._viewHeight;\r\n  }\r\n}\r\n","\r\nexport default class Utility {\r\n\r\n  constructor() {}\r\n\r\n  static getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  static getRandomColor() {\r\n    return '#' + ((1 << 24) * Math.random() | 0).toString(16);\r\n  }\r\n\r\n  static has(object, key) {\r\n    return object ? hasOwnProperty.call(object, key) : false;\r\n  }\r\n\r\n  static addHour(h) {\r\n    let now = new Date();\r\n\r\n    now.setHours(now.getHours() + h);\r\n    return now;\r\n  }\r\n\r\n  static getAngleByDate(speed, date) {\r\n    return ((speed * Math.PI) / 6) * date.getSeconds() + ((speed * Math.PI) / 6000) * date.getMilliseconds();\r\n  }\r\n\r\n  static getNextAngleByDegree(degree, speed) {\r\n    if (degree >= 360) {\r\n      return 0;\r\n    }\r\n    return degree + speed;\r\n  }\r\n\r\n  static getAngleByDegree(degree) {\r\n    return degree * Math.PI / 180;\r\n  }\r\n\r\n  static hexToRgba(hex, opacity) {\r\n    let h = hex.replace('#', '');\r\n    let r = parseInt(h.substring(0, 2), 16);\r\n    let g = parseInt(h.substring(2, 4), 16);\r\n    let b = parseInt(h.substring(4, 6), 16);\r\n\r\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    let h = hex.replace('#', '');\r\n    let color = [];\r\n\r\n    color[0] = parseInt(h.substring(0, 2), 16);\r\n    color[1] = parseInt(h.substring(2, 4), 16);\r\n    color[2] = parseInt(h.substring(4, 6), 16);\r\n    return color;\r\n  }\r\n\r\n  static hex(c) {\r\n    let s = '0123456789abcdef';\r\n    let i = parseInt(c, 10);\r\n\r\n    if (i === 0 || isNaN(c)) {\r\n      return '00';\r\n    }\r\n    i = Math.round(Math.min(Math.max(0, i), 255));\r\n    return s.charAt((i - i % 16) / 16) + s.charAt(i % 16);\r\n  }\r\n\r\n  static convertToHex(rgb) {\r\n    return this.hex(rgb[0]) + this.hex(rgb[1]) + this.hex(rgb[2]);\r\n  }\r\n\r\n  static generateGradientColor(colorStart, colorEnd, colorCount) {\r\n    const start = this.hexToRgb(colorStart);\r\n    const end = this.hexToRgb(colorEnd);\r\n    const len = colorCount;\r\n    let alpha = 0.0;\r\n    let rt = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      const c = [];\r\n\r\n      alpha += (1.0 / len);\r\n      c[0] = start[0] * alpha + (1 - alpha) * end[0];\r\n      c[1] = start[1] * alpha + (1 - alpha) * end[1];\r\n      c[2] = start[2] * alpha + (1 - alpha) * end[2];\r\n      rt.push(this.convertToHex(c));\r\n    }\r\n    return rt;\r\n  }\r\n\r\n  static isDefined(o) {\r\n    return o !== undefined && o !== null;\r\n  }\r\n\r\n  static leftPadZero(n) {\r\n    if (n < 10) {\r\n      return '0' + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  static getNextPos(curr, dest, speed) {\r\n    if (speed > 0 && curr + speed >= dest) {\r\n      return dest;\r\n    }\r\n\r\n    if (speed < 0 && curr + speed <= dest) {\r\n      return dest;\r\n    }\r\n    return curr + speed;\r\n  }\r\n\r\n  static shuffleArray(a) {\r\n    let j = 0;\r\n    let temp = 0;\r\n\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      temp = a[i];\r\n      a[i] = a[j];\r\n      a[j] = temp;\r\n    }\r\n    return a;\r\n  }\r\n}\r\n\r\n","import AnimationTimer from './animation-timer';\r\n\r\nclass Settings {\r\n  constructor() {\r\n    this._fps = 60;\r\n  }\r\n\r\n  set fps(fps) {\r\n    this._fps = fps;\r\n    AnimationTimer.setFps(fps);\r\n  }\r\n\r\n  get fps() {\r\n    return this._fps;\r\n  }\r\n}\r\n\r\nexport default new Settings();\r\n","\r\nlet GLOBAL = {\r\n  requestAnimationFrameArray: []\r\n};\r\n\r\nexport { GLOBAL };\r\n","import { GLOBAL } from './global';\r\nimport Settings from './settings';\r\n\r\nclass AnimationTimer {\r\n\r\n  constructor() {\r\n    // Bind the render function.\r\n    this.render = this.render.bind(this);\r\n\r\n    // Animation parameters.\r\n    this._fps = Settings._fps;\r\n    this._fpsInterval = 1000 / this._fps;\r\n    this._lastFrame = Date.now();\r\n\r\n    // Cross browser.\r\n    if (!window.requestAnimationFrame) {\r\n      window.requestAnimFrame = () => {\r\n        return window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame;\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // FPS control\r\n    let now = Date.now();\r\n    let elapsed = now - this._lastFrame;\r\n\r\n    if (elapsed > this._fpsInterval) {\r\n      this._lastFrame = now - (elapsed % this._fpsInterval);\r\n\r\n      // Draw\r\n      for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\r\n        let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\r\n\r\n        // Buy me some time.\r\n        /*\r\n        setTimeout(() => {\r\n          drawFrameObj.func.call(drawFrameObj.self);\r\n        }, 0);\r\n        */\r\n\r\n        drawFrameObj.func.call();\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(this.render);\r\n  }\r\n\r\n  setFps(fps) {\r\n    this._fps = fps;\r\n    this._fpsInterval = 1000 / this._fps;\r\n  }\r\n}\r\n\r\nexport default new AnimationTimer();\r\n\r\n","import BaseComponent from './base-component';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class ScoreBoard extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n    const viewHeight = options.viewHeight || 200;\r\n\r\n    super(canvas, options, viewWidth, viewHeight);\r\n\r\n    this._rows = [];\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._rowHeight = options.rowHeight || 20;\r\n    this._space = options.space || 0;\r\n    this._font = options.font || '10px Arial';\r\n    this._speed = options.speed || 5;\r\n    this._order = options.order || 'asc';\r\n  }\r\n\r\n  sort() {\r\n    if (this._order === 'asc') {\r\n      this._rows.sort((a, b) => a.score - b.score);\r\n    } else {\r\n      this._rows.sort((a, b) => b.score - a.score);\r\n    }\r\n  }\r\n\r\n  drawObject() {\r\n    for (let i = 0; i < this._rows.length; i++) {\r\n      const row = this._rows[i];\r\n\r\n      this._shape.fillRect(row.x, row.y, this._viewWidth, this._rowHeight, row.bgColor);\r\n      this._shape.fillText(row.text.value, row.x + row.text.xOffset, row.y + row.text.yOffset,\r\n        this._font, 'left', row.text.color);\r\n\r\n      if (row.moveType === 'move') {\r\n        const destY = i * (this._rowHeight + this._space);\r\n        const speedY = destY > row.y ? this._speed : -this._speed;\r\n\r\n        this._rows[i].y = Utility.getNextPos(row.y, destY, speedY);\r\n      } else if (row.moveType === 'remove') {\r\n        if (row.destX < 0 && row.x === row.destX) {\r\n          this._rows[i].speedX = this._speed * 2;\r\n          this._rows[i].destX = this._viewWidth + 10;\r\n        }\r\n        this._rows[i].x = Utility.getNextPos(row.x, this._rows[i].destX, this._rows[i].speedX);\r\n      }\r\n    }\r\n\r\n    // Delete the row.\r\n    for (let i = this._rows.length - 1; i >= 0; i--) {\r\n      const row = this._rows[i];\r\n\r\n      if (row.moveType === 'remove' && row.destX > 0 && row.x === row.destX) {\r\n        this._rows.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  update(params = {}) {\r\n    const id = params.id;\r\n    const text = params.text || {};\r\n\r\n    let isSort = false;\r\n\r\n    for (let i = 0; i < this._rows.length; i++) {\r\n      if (this._rows[i].id === id) {\r\n        if (this._rows[i].score !== params.score) {\r\n          isSort = true;\r\n        }\r\n        this._rows[i].moveType = 'move';\r\n        this._rows[i].score = params.score || this._rows[i].score;\r\n        this._rows[i].bgColor = params.bgColor || this._rows[i].bgColor;\r\n        this._rows[i].text.value = text.value || this._rows[i].text.value;\r\n        this._rows[i].text.color = text.color || this._rows[i].text.color;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isSort) {\r\n      this.sort();\r\n    }\r\n  }\r\n\r\n  remove(id) {\r\n    let isFound = false;\r\n\r\n    for (let i = 0; i < this._rows.length; i++) {\r\n      if (this._rows[i].id === id && this._rows[i].moveType !== 'remove') {\r\n        this._rows[i].moveType = 'remove';\r\n        this._rows[i].speedX = -this._speed;\r\n        this._rows[i].destX = -40;\r\n        isFound = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isFound) {\r\n      this.sort();\r\n    }\r\n  }\r\n\r\n  add(params = {}) {\r\n    for (let i = 0; i < this._rows.length; i++) {\r\n      if (this._rows.id === params.id) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    let text = params.text || {};\r\n    let row = {\r\n      id: params.id,\r\n      score: params.score || 0,\r\n      bgColor: params.bgColor || COLOR.blue,\r\n      text: {\r\n        value: text.value || '',\r\n        color: text.color || COLOR.white,\r\n        xOffset: text.xOffset || 0,\r\n        yOffset: text.yOffset || 0\r\n      }\r\n    };\r\n\r\n    row.x = 0;\r\n    row.y = 0;\r\n    row.destX = 0;\r\n    row.destY = 0;\r\n    row.speedX = 0;\r\n    row.speedY = 0;\r\n    row.moveType = 'move';\r\n\r\n    this._rows.push(row);\r\n    this.sort();\r\n  }\r\n\r\n  get rows() {\r\n    return this._rows;\r\n  }\r\n}\r\n","import BaseComponent from './base-component';\r\nimport { COLOR } from './color';\r\n\r\nexport default class HexGrid extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n    const viewHeight = options.viewHeight || 200;\r\n\r\n    super(canvas, options, viewWidth, viewHeight);\r\n\r\n    this._nodes = [];\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._space = options.space || 5;\r\n    this._radius = options.radius || 20;\r\n    this._border = options.border || 3;\r\n  }\r\n\r\n  drawObject() {\r\n    const s = this._space;\r\n    const r = this._radius;\r\n    const w = Math.pow(3, 0.5) * r / 2;\r\n\r\n    this._ctx.lineWidth = this._border;\r\n    const now = Date.now();\r\n\r\n    this._nodes.forEach((h) => {\r\n      const xOffset = h.x % 2 === 0 ? s + w : s * 3 / 2 + 2 * w;\r\n      const y = (s + r) + (w + s / 2) * Math.pow(3, 0.5) * h.x;\r\n\r\n      this.drawHex(xOffset + (2 * w + s) * h.y, y, r, h.bgColor, h.borderColor, h.text, h.text.xOffset, h.text.yOffset);\r\n\r\n      if (h.blink.on) {\r\n        const interval = h.blink.interval;\r\n        const lastCall = h.blink.lastCall;\r\n\r\n        if (now - lastCall < interval) {\r\n          this.drawHex(xOffset + (2 * w + s) * h.y, y, r, h.blink.bgColor, h.blink.borderColor, h.blink.text,\r\n            h.text.xOffset, h.text.yOffset);\r\n        } else if (now - lastCall < (interval * 2)) {\r\n        } else {\r\n          h.blink.lastCall = now;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  drawHex(x, y, r, bgColor, lineColor, text, xOffset, yOffset) {\r\n    const w = Math.pow(3, 0.5) * r / 2;\r\n\r\n    this._ctx.strokeStyle = lineColor;\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(x, y - r);\r\n    this._ctx.lineTo(x + w, y - r / 2);\r\n    this._ctx.lineTo(x + w, y + r / 2);\r\n    this._ctx.lineTo(x, y + r);\r\n    this._ctx.lineTo(x - w, y + r / 2);\r\n    this._ctx.lineTo(x - w, y - r / 2);\r\n    this._ctx.lineTo(x, y - r);\r\n    this._ctx.closePath();\r\n    this._ctx.stroke();\r\n    this._ctx.fillStyle = bgColor;\r\n    this._ctx.fill();\r\n\r\n    this._shape.fillText(text.value, x + xOffset, y + yOffset, text.font, 'center', text.color);\r\n  }\r\n\r\n  /**\r\n   * Create or update a hex\r\n   * @param {object} params\r\n   */\r\n  saveHex(params = {}) {\r\n    const text = params.text || {};\r\n    const node = {\r\n      id: params.id,\r\n      x: params.x,\r\n      y: params.y,\r\n      bgColor: params.bgColor || COLOR.white,\r\n      borderColor: params.borderColor || COLOR.white,\r\n      text: {\r\n        value: text.value || '',\r\n        color: text.color || COLOR.black,\r\n        font: text.font || '12px Arial',\r\n        xOffset: text.xOffset || 0,\r\n        yOffset: text.yOffset || 0\r\n      },\r\n      blink: {\r\n        text: {\r\n          value: '',\r\n          color: COLOR.black\r\n        },\r\n        borderColor: params.borderColor || COLOR.white,\r\n        bgColor: COLOR.red,\r\n        interval: 1000,\r\n        on: false,\r\n        lastCall: 0\r\n      }\r\n    };\r\n\r\n    let isExist = false;\r\n\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (this._nodes[i].id === node.id) {\r\n        this._nodes[i] = node;\r\n        isExist = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!isExist) {\r\n      this._nodes.push(node);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blink on\r\n   * @param {object} params\r\n   */\r\n  blinkOn(params = {}) {\r\n    const text = params.text || {};\r\n\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (this._nodes[i].id === params.id) {\r\n        this._nodes[i].blink.text.value = text.value || '';\r\n        this._nodes[i].blink.text.color = text.color || COLOR.black;\r\n        this._nodes[i].blink.borderColor = params.borderColor || COLOR.white;\r\n        this._nodes[i].blink.bgColor = params.bgColor || COLOR.red;\r\n        this._nodes[i].blink.interval = params.interval || 1000;\r\n        this._nodes[i].blink.on = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blink off\r\n   * @param {string} id\r\n   */\r\n  blinkOff(id) {\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (this._nodes[i].id === id) {\r\n        this._nodes[i].blink.on = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import BaseComponent from './base-component';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class NetworkGraph extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n    const viewHeight = options.viewHeight || 200;\r\n\r\n    super(canvas, options, viewWidth, viewHeight);\r\n\r\n    this._signalQueues = [];\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._nodes = options.nodes || [];\r\n  }\r\n\r\n  drawObject() {\r\n    // Draw edges\r\n    this._nodes.forEach((node) => {\r\n      // Neighbors\r\n      const neighbors = node.neighbors || [];\r\n\r\n      neighbors.forEach((neighbor) => {\r\n        const destNode = this.getNodeById(neighbor.id);\r\n        // Edge options\r\n        const edge = neighbor.edge || {};\r\n        const edgeWidth = edge.width || 1;\r\n        const edgeColor = edge.color || COLOR.grey;\r\n        const edgeDash = edge.dash || [];\r\n\r\n        // Draw the neighbor and edge\r\n        if (destNode !== null) {\r\n          if (edgeDash.length !== 0) {\r\n            this._ctx.setLineDash(edgeDash);\r\n          } else {\r\n            this._ctx.setLineDash([]);\r\n          }\r\n          this._shape.line(node.x, node.y, destNode.x, destNode.y, edgeWidth, edgeColor);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Draw moving signals\r\n    let toDelete = [];\r\n\r\n    for (let i = 0; i < this._signalQueues.length; i++) {\r\n      const signal = this._signalQueues[i];\r\n\r\n      this._signalQueues[i].x = Utility.getNextPos(signal.x, signal.destX, signal.speedX);\r\n      this._signalQueues[i].y = Utility.getNextPos(signal.y, signal.destY, signal.speedY);\r\n\r\n      if (signal.x === signal.destX && signal.y === signal.destY) {\r\n        // Append to the deletion queue.\r\n        toDelete.push(i);\r\n      } else {\r\n        this._shape.fillCircle(signal.x, signal.y, signal.size, signal.color);\r\n      }\r\n    }\r\n\r\n    // Delete from the signal queue\r\n    for (let i = toDelete.length - 1; i >= 0; i--) {\r\n      this._signalQueues.splice(toDelete[i], 1);\r\n    }\r\n\r\n    // Draw nodes\r\n    this._nodes.forEach((node) => {\r\n      const text = node.text || {};\r\n      const textValue = text.value || '';\r\n      const textColor = text.color || COLOR.black;\r\n      const textFont = text.font || '12px Arial';\r\n      const xTextOffset = text.xOffset || 0;\r\n      const yTextOffset = text.yOffset || 0;\r\n\r\n      // Draw the node and text\r\n      this._shape.fillCircle(node.x, node.y, node.size, node.color);\r\n      this._shape.fillText(textValue, node.x + xTextOffset, node.y + yTextOffset, textFont, 'center', textColor);\r\n    });\r\n  }\r\n\r\n  getNodeById(nodeId) {\r\n    return this._nodes.find(n => n.id === nodeId);\r\n  }\r\n\r\n  /**\r\n   * Add nodes\r\n   * @param {array} nodes\r\n   */\r\n  addNodes(nodes = []) {\r\n    this._nodes.push(...nodes);\r\n  }\r\n\r\n  /**\r\n   * Add a neighbor to a node\r\n   * @param {string} from\r\n   * @param {object} neighbor\r\n   */\r\n  addNeighbor(from, neighbor = {}) {\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (this._nodes[i].id === from) {\r\n        this._nodes[i].neighbors = this._nodes[i].neighbors || [];\r\n        this._nodes[i].neighbors.push(neighbor);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a signal from source node to destination node\r\n   * @param {object} params\r\n   * @property {string} params.from\r\n   * @property {string} params.to\r\n   * @property {string} params.color\r\n   * @property {number} params.duration\r\n   * @property {number} params.size\r\n   */\r\n  signal(params = {}) {\r\n    const color = params.color || COLOR.black;\r\n    const duration = params.duration || 2000;\r\n    const size = params.size || 3;\r\n\r\n    const srcNode = this.getNodeById(params.from);\r\n    const destNode = this.getNodeById(params.to);\r\n\r\n    const sX = Math.abs(destNode.x - srcNode.x) / (duration / 60);\r\n    const sY = Math.abs(destNode.y - srcNode.y) / (duration / 60);\r\n    const speedX = destNode.x > srcNode.x ? sX : -sX;\r\n    const speedY = destNode.y > srcNode.y ? sY : -sY;\r\n\r\n    this._signalQueues.push({\r\n      x: srcNode.x,\r\n      y: srcNode.y,\r\n      destX: destNode.x,\r\n      destY: destNode.y,\r\n      speedX: speedX,\r\n      speedY: speedY,\r\n      color: color,\r\n      size: size\r\n    });\r\n  }\r\n\r\n  get nodes() {\r\n    return this._nodes;\r\n  }\r\n}\r\n\r\n","\r\nimport Utility from './utility';\r\nimport BaseComponent from './base-component';\r\nimport { COLOR } from './color';\r\n\r\n/**\r\n * Allow override width\r\n * default view height 100\r\n */\r\nexport default class TextBox extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n\r\n    super(canvas, options, viewWidth, 100);\r\n\r\n    this._borderWidth = 8;\r\n    this._borderHeight = 30;\r\n    this._space = 10;\r\n    this._waveY = 0;\r\n    this._waveSpeed = 1;\r\n    this._isWaveOn = false;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    const text = options.text || {};\r\n\r\n    this._textValue = text.value || '';\r\n    this.textColor = text.fontColor || COLOR.white;\r\n    this.textBgColor = text.bgColor || COLOR.blue;\r\n\r\n    this.bgColor = options.bgColor || 'rgba(0, 0, 0, 0.01)';\r\n    this.borderColor = options.borderColor || COLOR.blue;\r\n    this.waveColor = options.waveColor || COLOR.blue;\r\n  }\r\n\r\n  clear() {\r\n    this._ctx.fillStyle = this.bgColor;\r\n    this._ctx.fillRect(0, 0, this._width, this._height);\r\n  }\r\n\r\n  drawObject() {\r\n    this._ctx.textAlign = 'center';\r\n\r\n    // Draw wave line\r\n    if (this._isWaveOn) {\r\n      const waveWidth = 1;\r\n\r\n      if (this._waveY >= ((this._viewHeight / 2) + waveWidth)) {\r\n        this._waveY = 0;\r\n        this._isWaveOn = false;\r\n      } else {\r\n        this._ctx.fillStyle = this.waveColor;\r\n        this._ctx.beginPath();\r\n        this._ctx.fillRect(0, this._waveY, this._viewWidth + waveWidth, waveWidth);\r\n        this._ctx.closePath();\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.fillRect(0, this._viewHeight - this._waveY - waveWidth, this._viewWidth, waveWidth);\r\n        this._ctx.closePath();\r\n        this._waveY = Utility.getNextPos(this._waveY, this._viewHeight / 2 + waveWidth, this._waveSpeed);\r\n      }\r\n    }\r\n\r\n    // Draw the border.\r\n    // Top left\r\n    this._ctx.fillStyle = this.borderColor;\r\n    this._ctx.fillRect(0, 0, this._borderHeight, this._borderWidth);\r\n    this._ctx.fillRect(0, 0, this._borderWidth, this._borderHeight);\r\n    // Bottom left\r\n    this._ctx.fillRect(0, this._viewHeight - this._borderHeight, this._borderWidth, this._borderHeight);\r\n    this._ctx.fillRect(0, this._viewHeight - this._borderWidth, this._borderHeight, this._borderWidth);\r\n    // Top right\r\n    this._ctx.fillRect(this._viewWidth - this._borderHeight, 0, this._borderHeight, this._borderWidth);\r\n    this._ctx.fillRect(this._viewWidth - this._borderWidth, 0, this._borderWidth, this._borderHeight);\r\n\r\n    // Bottom right\r\n    this._ctx.fillRect(this._viewWidth - this._borderHeight, this._viewHeight - this._borderWidth,\r\n      this._borderHeight, this._borderWidth);\r\n    this._ctx.fillRect(this._viewWidth - this._borderWidth, this._viewHeight - this._borderHeight,\r\n      this._borderWidth, this._borderHeight);\r\n\r\n    // Draw background rect.\r\n    this._ctx.fillStyle = this.textBgColor;\r\n    this._ctx.fillRect(this._borderWidth + this._space, this._borderWidth + this._space,\r\n      this._viewWidth - 2 * (this._borderWidth + this._space),\r\n      this._viewHeight - 2 * (this._borderWidth + this._space));\r\n\r\n    // Draw text.\r\n    this._shape.fillText(this._textValue, this._viewWidth / 2, this._viewHeight - 35,\r\n      '40px Arial', 'center', this.textColor);\r\n  }\r\n\r\n  set value(s) {\r\n    this._textValue = s;\r\n    this._isWaveOn = true;\r\n  }\r\n}\r\n","\r\nimport Utility from './utility';\r\nimport BaseComponent from './base-component';\r\nimport { COLOR } from './color';\r\n\r\nexport default class SpeedCircle extends BaseComponent {\r\n\r\n  constructor(canvas, options) {\r\n    super(canvas, options, 200, 200);\r\n\r\n    this._font = '25px Arial';\r\n    this._degree1 = 0;\r\n    this._degree2 = 0;\r\n    this._degree3 = 0;\r\n    this._degree4 = 0;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    const c1 = options.circle1 || {};\r\n    const c2 = options.circle2 || {};\r\n    const c3 = options.circle3 || {};\r\n    const c4 = options.circle4 || {};\r\n    const text = options.text || {};\r\n\r\n    this.speed1 = c1.speed || 0.5;\r\n    this.color1 = c1.color || COLOR.red;\r\n\r\n    this.speed2 = c2.speed || -0.5;\r\n    this.color2 = c2.color || COLOR.yellow;\r\n\r\n    this.speed3 = c3.speed || 0.5;\r\n    this.color3 = c3.color || COLOR.blue;\r\n\r\n    this.speed4 = c4.speed || -0.5;\r\n    this.color4 = c4.color || COLOR.grey;\r\n\r\n    this.textColor = text.color || COLOR.green;\r\n    this.textValue = text.value || '';\r\n  }\r\n\r\n  drawObject() {\r\n    this._degree1 = Utility.getNextAngleByDegree(this._degree1, this.speed1);\r\n    this._degree2 = Utility.getNextAngleByDegree(this._degree2, this.speed2);\r\n    this._degree3 = Utility.getNextAngleByDegree(this._degree3, this.speed3);\r\n    this._degree4 = Utility.getNextAngleByDegree(this._degree4, this.speed4);\r\n\r\n    const a1 = Utility.getAngleByDegree(this._degree1);\r\n    const a2 = Utility.getAngleByDegree(this._degree2);\r\n    const a3 = Utility.getAngleByDegree(this._degree3);\r\n    const a4 = Utility.getAngleByDegree(this._degree4);\r\n\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(a1);\r\n    // Draw bar circle 1.\r\n    this._ctx.strokeStyle = this.color1;\r\n    this._ctx.lineWidth = 8;\r\n    let space = 0.02;\r\n    let len = 0.5;\r\n    let start = 0;\r\n    let end = len;\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      this._ctx.beginPath();\r\n      this._ctx.arc(0, 0, 90, Math.PI * start, Math.PI * end);\r\n      this._ctx.stroke();\r\n      this._ctx.closePath();\r\n\r\n      start = end + space;\r\n      len /= 1.7;\r\n      end = start + len;\r\n    }\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(a3);\r\n\r\n    // Draw dot circle 3.\r\n    for (let i = 0; i < 360; i = i + 9) {\r\n      let a = Utility.getAngleByDegree(i);\r\n\r\n      let x = 64 * Math.cos(a);\r\n      let y = 64 * Math.sin(a);\r\n\r\n      this._shape.fillCircle(x, y, 3, this.color3);\r\n    }\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(a2);\r\n\r\n    // Draw bar circle 2.\r\n    for (let i = 0; i < 360; i = i + 8) {\r\n      let a = Utility.getAngleByDegree(i);\r\n\r\n      const x1 = 70 * Math.cos(a);\r\n      const y1 = 70 * Math.sin(a);\r\n\r\n      let x2 = 83 * Math.cos(a);\r\n      let y2 = 83 * Math.sin(a);\r\n\r\n      this._shape.line(x1, y1, x2, y2, 6, this.color2);\r\n    }\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(a4);\r\n\r\n    // Draw bar circle 4.\r\n    this._ctx.lineWidth = 5;\r\n    this._ctx.strokeStyle = this.color4;\r\n    len = (2 - (12 * space)) / 12;\r\n    start = 0;\r\n    end = len;\r\n    for (let i = 0; i < 12; i++) {\r\n      this._ctx.beginPath();\r\n      this._ctx.arc(0, 0, 56, Math.PI * start, Math.PI * end);\r\n      this._ctx.stroke();\r\n      this._ctx.closePath();\r\n      start = end + space;\r\n      end = start + len;\r\n    }\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    // Draw the text in the middle.\r\n    this._shape.fillText(this.textValue, 100, 110, this._font, 'center', this.textColor);\r\n  }\r\n}\r\n","\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\nimport BaseComponent from './base-component';\r\n\r\n/**\r\n * Allow override width\r\n * default view height 100\r\n */\r\nexport default class TextMeter extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n\r\n    super(canvas, options, viewWidth, 100);\r\n\r\n    this._lineWidth = 5;\r\n    this._arrowWidth = 30;\r\n    this._pctHeight = 30;\r\n    this._actualPctHeight = this._pctHeight - this._lineWidth / 2;\r\n    this._meterWidth = this._viewWidth - 2 * this._arrowWidth;\r\n    this._meterHeight = 100 - this._pctHeight - this._lineWidth / 2;\r\n    this._middleBarHeight = this._meterHeight / 2 + this._pctHeight;\r\n\r\n    this._barX = (this._percentageValue / 100) * this._meterWidth + this._arrowWidth;\r\n    this._nextBarX = this._barX;\r\n\r\n    this._arrow = null;\r\n    this._arrowSpeed = 0.6;\r\n    this._leftArrowX = -5;\r\n    this._rightArrowX = this._viewWidth + 5;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    const bar = options.bar || {};\r\n    const marker = options.marker || {};\r\n\r\n    this.markerBgColor = marker.bgColor || COLOR.black;\r\n    this.markerFontColor = marker.fontColor || COLOR.white;\r\n\r\n    this.speed = bar.speed || 5;\r\n    this.fillColor = bar.fillColor || COLOR.red;\r\n    this.bgColor = bar.bgColor || COLOR.lightWhite;\r\n    this._lineColor = bar.borderColor || COLOR.lightGreen;\r\n\r\n    this._percentageValue = options.value || 0;\r\n    this.displayValue = options.displayValue || '';\r\n    this.arrowColor = options.arrowColor || COLOR.blue;\r\n  }\r\n\r\n  drawObject() {\r\n    this._ctx.globalCompositeOperation = 'destination-over';\r\n\r\n    // Draw left half text\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._arrowWidth, this._pctHeight, this._barX - this._arrowWidth, this._meterHeight);\r\n    this._ctx.clip();\r\n\r\n    this._shape.fillText(this.displayValue, this._viewWidth / 2, 75, '30px Arial', 'center', this.bgColor);\r\n\r\n    this._ctx.fillStyle = this.fillColor;\r\n    this._ctx.fillRect(this._arrowWidth, this._pctHeight, this._barX - this._arrowWidth, this._meterHeight);\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    this._ctx.globalCompositeOperation = 'destination-over';\r\n\r\n    // Draw right half text\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._barX, this._pctHeight, this._viewWidth - this._barX - this._arrowWidth, this._meterHeight);\r\n    this._ctx.clip();\r\n\r\n    this._shape.fillText(this.displayValue, this._viewWidth / 2, 75, '30px Arial', 'center', this.fillColor);\r\n\r\n    this._shape.fillRect(this._barX, this._pctHeight, this._viewWidth - this._barX - this._arrowWidth,\r\n      this._meterHeight, this.bgColor);\r\n\r\n    this._ctx.restore();\r\n    this.save();\r\n    this._ctx.globalCompositeOperation = 'source-over';\r\n\r\n    // Draw the border.\r\n    this._ctx.lineWidth = this._lineWidth;\r\n    this._ctx.strokeStyle = this._lineColor;\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._arrowWidth, this._pctHeight, this._meterWidth, this._meterHeight);\r\n    this._ctx.stroke();\r\n    this._ctx.closePath();\r\n\r\n    // Draw percentage value\r\n    this._ctx.fillStyle = this.markerBgColor;\r\n\r\n    this._ctx.fillRect(this._barX - 25, 0, 50, this._actualPctHeight);\r\n    this._shape.fillText(this._percentageValue + '%', this._barX, 20, '16px Arial', 'center', this.markerFontColor);\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this.markerBgColor;\r\n    this._ctx.moveTo(this._barX - 8, this._actualPctHeight - this._lineWidth / 2);\r\n    this._ctx.lineTo(this._barX, this._pctHeight + this._lineWidth / 2);\r\n    this._ctx.lineTo(this._barX + 8, this._actualPctHeight - this._lineWidth / 2);\r\n    this._ctx.fill();\r\n    this._ctx.closePath();\r\n\r\n    // Draw arrow.\r\n    if (this._arrow === null) {\r\n      this.drawLeftArrow();\r\n      this.drawRightArrow();\r\n    } else if (this._arrow === 'left') {\r\n      this.drawLeftArrow();\r\n    } else {\r\n      // right\r\n      this.drawRightArrow();\r\n    }\r\n    // Calculate next position barX\r\n    this._barX = Utility.getNextPos(this._barX, this._nextBarX, this.speed);\r\n  }\r\n\r\n  drawLeftArrow() {\r\n    if (this._leftArrowX <= 0) {\r\n      this._leftArrowX = this._arrowWidth - 3;\r\n    } else {\r\n      this._leftArrowX = Utility.getNextPos(this._leftArrowX, 0, -this._arrowSpeed);\r\n    }\r\n    this._shape.fillTriangle(this._leftArrowX, this._actualPctHeight + 10, this._leftArrowX - 20, this._middleBarHeight,\r\n      this._leftArrowX, 90, this.arrowColor);\r\n  }\r\n\r\n  drawRightArrow() {\r\n    if (this._rightArrowX >= this._viewWidth) {\r\n      this._rightArrowX = this._arrowWidth + 3 + this._meterWidth;\r\n    } else {\r\n      this._rightArrowX = Utility.getNextPos(this._rightArrowX, this._viewWidth, this._arrowSpeed);\r\n    }\r\n    this._shape.fillTriangle(this._rightArrowX, this._actualPctHeight + 10, this._rightArrowX + 20,\r\n      this._middleBarHeight, this._rightArrowX, 90, this.arrowColor);\r\n  }\r\n\r\n  set value(value) {\r\n    if (value >= 0 || value <= 100) {\r\n      if (value < this._percentageValue) {\r\n        this.speed = -Math.abs(this.speed);\r\n        this._arrow = 'left';\r\n      } else if (value > this._percentageValue) {\r\n        this.speed = Math.abs(this.speed);\r\n        this._arrow = 'right';\r\n      } else {\r\n        this._arrow = null;\r\n      }\r\n      this._percentageValue = Math.floor(value);\r\n      this._nextBarX = (this._percentageValue / 100) * this._meterWidth + this._arrowWidth;\r\n    }\r\n  }\r\n}\r\n","import { COLOR } from './color';\r\nimport BaseComponent from './base-component';\r\n\r\n/**\r\n * flexiable width, height\r\n */\r\nexport default class MessageQueue extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 100;\r\n    const viewHeight = options.viewHeight || 200;\r\n\r\n    super(canvas, options, viewWidth, viewHeight);\r\n\r\n    this._queue = [];\r\n    this._arcWidth = 10;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._barHeight = options.barHeight || 20;\r\n    this._speed = options.speed || 5;\r\n    this._space = options.space || 5;\r\n    this._maxQueueCapacity = options.maxQueueCapacity || 20;\r\n  }\r\n\r\n  drawObject() {\r\n    // Bars can be seen in the view\r\n    const bars = Math.floor(this._viewHeight / (this._barHeight + this._space));\r\n    const drawQueueSize = Math.min(this._queue.length, bars);\r\n\r\n    for (let i = 0; i < drawQueueSize; i++) {\r\n      let q = this._queue[i];\r\n\r\n      let currY = (this._barHeight + this._space) * i + this._space;\r\n\r\n      // Move up\r\n      if (currY < q.y) {\r\n        q.y -= this._speed;\r\n      } else {\r\n        q.y = currY;\r\n      }\r\n\r\n      this._shape.fillRect(q.x, q.y, this._viewWidth - 2 * (this._arcWidth + q.space), this._barHeight, q.color);\r\n\r\n      this._ctx.beginPath();\r\n      this._ctx.moveTo(q.x, q.y);\r\n      this._ctx.quadraticCurveTo(q.x - this._arcWidth, q.y + this._barHeight / 2, q.x, q.y + this._barHeight);\r\n      this._ctx.fill();\r\n      this._ctx.closePath();\r\n      this._ctx.beginPath();\r\n      this._ctx.moveTo(this._viewWidth - this._arcWidth - q.space, q.y);\r\n      this._ctx.quadraticCurveTo(this._viewWidth - q.space, q.y + this._barHeight / 2,\r\n        this._viewWidth - this._arcWidth - q.space, q.y + this._barHeight);\r\n      this._ctx.fill();\r\n      this._ctx.closePath();\r\n    }\r\n  }\r\n\r\n  push(param = {}) {\r\n    const barColor = param.color || COLOR.blue;\r\n    const barSpace = param.space || 0;\r\n\r\n    if (this._queue.length >= this._maxQueueCapacity) {\r\n      this.pop();\r\n    }\r\n\r\n    this._queue.push({\r\n      x: this._arcWidth + barSpace,\r\n      y: this._viewHeight + this._barHeight,\r\n      color: barColor,\r\n      space: barSpace\r\n    });\r\n  }\r\n\r\n  pop() {\r\n    if (this._queue.length > 0) {\r\n      this._queue.shift();\r\n    }\r\n  }\r\n\r\n  get queueSize() {\r\n    return this._queue.length;\r\n  }\r\n}\r\n\r\n","import Utility from './utility';\r\nimport { COLOR } from './color';\r\nimport BaseComponent from './base-component';\r\n\r\n/**\r\n * Allow override width\r\n * view height: 100\r\n */\r\nexport default class Heartbeat extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 200;\r\n\r\n    super(canvas, options, viewWidth, 100);\r\n\r\n    this._queue = [];\r\n    this._lastSec = 0;\r\n    this._timer = null;\r\n\r\n    this.drawSeconds();\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._speed = options.speed || 2;\r\n    this._fontColor = options.fontColor || COLOR.black;\r\n    this._maxQueueCapacity = options.maxQueueCapacity || 30;\r\n  }\r\n\r\n  postConstructor() {\r\n    super.postConstructor();\r\n    // Start drawing the seconds\r\n    this.tick();\r\n  }\r\n\r\n  destroy() {\r\n    if (this._timer != null) {\r\n      clearInterval(this._timer);\r\n    }\r\n    super.destroy();\r\n  }\r\n\r\n  beat(params = {}) {\r\n    const beatColor = params.color || COLOR.green;\r\n    const beatSpace = params.space || 0;\r\n\r\n    if (this._queue.length >= this._maxQueueCapacity) {\r\n      this._queue.shift();\r\n    }\r\n    this._queue.push({\r\n      time: null,\r\n      x: -30,\r\n      color: beatColor,\r\n      space: beatSpace\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    if (this._timer == null) {\r\n      this._timer = setInterval(() => {\r\n        this.drawSeconds();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  drawSeconds() {\r\n    if (this._queue.length >= this._maxQueueCapacity) {\r\n      this._queue.shift();\r\n    }\r\n\r\n    let now = new Date();\r\n    let currSec = Utility.leftPadZero(now.getMinutes()) + ':' + Utility.leftPadZero(now.getSeconds());\r\n\r\n    if (currSec !== this._lastSec) {\r\n      this._queue.push({ time: currSec, x: -30});\r\n      this._lastSec = currSec;\r\n    }\r\n  }\r\n\r\n  drawObject() {\r\n    this._ctx.textAlign = 'center';\r\n    this._ctx.font = '12px Arial';\r\n\r\n    // Draw the horizontal line\r\n    this._shape.fillRect(0, 50, this._viewWidth, 2, this._fontColor);\r\n\r\n    // Draw the pulse\r\n    for (let i = 0; i < this._queue.length; i++) {\r\n      let q = this._queue[i];\r\n\r\n      if (q.time != null) {\r\n        this._ctx.fillStyle = this._fontColor;\r\n        this._ctx.fillText(q.time, q.x, 90);\r\n\r\n        this._shape.fillRect(q.x - 1, 45, 2, 12, this._fontColor);\r\n      } else {\r\n        this._ctx.fillStyle = q.color;\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(q.x - 10, 50);\r\n        this._ctx.quadraticCurveTo(q.x - 5, -20 + q.space * 2, q.x, 50);\r\n        this._ctx.quadraticCurveTo(q.x + 5, 100 - q.space * 1, q.x + 10, 50);\r\n        this._ctx.closePath();\r\n        this._ctx.fill();\r\n      }\r\n      q.x += this._speed;\r\n    }\r\n  }\r\n}\r\n\r\n","\r\nimport BaseComponent from './base-component';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class VolumeMeter extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewHeight = options.viewHeight || 200;\r\n\r\n    super(canvas, options, 100, viewHeight);\r\n\r\n    this._lineWidth = 3;\r\n    this._numberHeight = 20;\r\n    this._minMax = 'min';\r\n    this._meterWidth = this._viewWidth / 2;\r\n    this._meterHeight = this._viewHeight - 2 * this._numberHeight;\r\n    this._numberStart = (this._viewWidth - this._meterWidth - this._lineWidth) / 2;\r\n    // Used only if the value is out of range.\r\n    this._actualValue = this._value;\r\n\r\n    this._barY = this._viewHeight - (((this._value - this._minValue) /\r\n      (this._maxValue - this._minValue)) * this._meterHeight) - this._numberHeight;\r\n    this._nextBarY = this._barY;\r\n  }\r\n\r\n  /**\r\n   * @param {*} options\r\n   */\r\n  setOptions(options = {}) {\r\n    const min = options.min || {};\r\n    const max = options.max || {};\r\n    const bar = options.bar || {};\r\n    const marker = options.marker || {};\r\n\r\n    this._minFontColor = min.fontColor || COLOR.white;\r\n    this._minValue = min.value || 0;\r\n    this._minBgColor = min.bgColor || COLOR.red;\r\n\r\n    this._maxFontColor = max.fontColor || COLOR.white;\r\n    this._maxValue = max.value || 100;\r\n    this._maxBgColor = max.bgColor || COLOR.blue;\r\n\r\n    this._barBorderColor = bar.borderColor || COLOR.black;\r\n    this.barFillColor = bar.fillColor || COLOR.green;\r\n    this._isGraident = bar.graident || false;\r\n    this._speed = bar.speed || 5;\r\n\r\n    this.markerBgColor = marker.bgColor || COLOR.yellow;\r\n    this._markerFontColor = marker.fontColor || COLOR.white;\r\n\r\n    this._value = options.value || 0;\r\n  }\r\n\r\n  drawObject() {\r\n    // Handle graident fill color.\r\n    let barFillStyle = this.barFillColor;\r\n\r\n    if (this._isGraident) {\r\n      const graident = this._ctx.createLinearGradient(this._viewWidth / 2, this._barY,\r\n        this._viewWidth / 2, this._meterHeight + this._numberHeight);\r\n\r\n      graident.addColorStop(0, this.barFillColor);\r\n      graident.addColorStop(1, 'white');\r\n      barFillStyle = graident;\r\n    }\r\n\r\n    // Draw the filled part.\r\n    this._shape.fillRect((this._viewWidth - this._meterWidth) / 2, this._barY, this._meterWidth,\r\n      this._viewHeight - this._barY - this._numberHeight, barFillStyle);\r\n\r\n    // Draw the border.\r\n    this._ctx.beginPath();\r\n    this._ctx.lineWidth = this._lineWidth;\r\n    this._ctx.strokeStyle = this._barBorderColor;\r\n    this._ctx.rect((this._viewWidth - this._meterWidth) / 2, this._numberHeight, this._meterWidth, this._meterHeight);\r\n    this._ctx.stroke();\r\n    this._ctx.closePath();\r\n\r\n    // Draw value.\r\n    this.drawMin();\r\n    this.drawMax();\r\n    this.drawMarker();\r\n\r\n    // Calculate the Y value.\r\n    this._barY = Utility.getNextPos(this._barY, this._nextBarY, this._speed);\r\n  }\r\n\r\n  drawMin() {\r\n    this._shape.fillRect(this._numberStart, this._viewHeight - this._numberHeight - this._lineWidth / 2,\r\n      this._meterWidth + this._lineWidth, this._numberHeight + this._lineWidth / 2, this._minBgColor);\r\n    this._shape.fillText(this._minValue, this._meterWidth, this._meterHeight + this._numberHeight + 15,\r\n      '15px Arial', 'center', this._minFontColor);\r\n  }\r\n\r\n  drawMax() {\r\n    this._shape.fillRect(this._numberStart, 0, this._meterWidth + this._lineWidth,\r\n      this._numberHeight + this._lineWidth / 2, this._maxBgColor);\r\n    this._shape.fillText(this._maxValue, this._meterWidth, this._numberHeight - 4,\r\n      '15px Arial', 'center', this._maxFontColor);\r\n  }\r\n\r\n  drawMarker() {\r\n    const text = (this._minMax === 'max' || this._minMax === 'min') ? this._actualValue : this._value;\r\n\r\n    this._shape.fillRect(this._numberStart + this._meterWidth + this._lineWidth,\r\n      this._barY - 8, (this._viewWidth - (this._numberStart + this._meterWidth + this._lineWidth)), 16,\r\n      this.markerBgColor);\r\n\r\n    this._shape.fillRect(0, this._barY - this._lineWidth / 2,\r\n      this._numberStart + this._meterWidth + this._lineWidth, this._lineWidth, this.markerBgColor);\r\n\r\n    this._shape.fillText(text, (this._viewWidth - this._meterWidth) / 4 * 3 + this._meterWidth, this._barY + 4,\r\n      '10px Arial', 'center', this._markerFontColor);\r\n  }\r\n\r\n  set value(value) {\r\n    let n = value;\r\n\r\n    this._actualValue = n;\r\n\r\n    if (n >= this._maxValue) {\r\n      this._minMax = 'max';\r\n      n = this._maxValue;\r\n    } else if (n <= this._minValue) {\r\n      this._minMax = 'min';\r\n      n = this._minValue;\r\n    } else {\r\n      this._minMax = 'normal';\r\n    }\r\n\r\n    this._speed = n < this._value ? Math.abs(this._speed) : -Math.abs(this._speed);\r\n    this._nextBarY = this._viewHeight - (((n - this._minValue) /\r\n      (this._maxValue - this._minValue)) * this._meterHeight) - this._numberHeight;\r\n    this._value = n;\r\n  }\r\n}\r\n","import { COLOR } from './color';\r\nimport Utility from './utility';\r\nimport BaseComponent from './base-component';\r\n\r\nexport default class RoundFan extends BaseComponent {\r\n\r\n  constructor(canvas, options) {\r\n    super(canvas, options, 200, 200);\r\n\r\n    this._degree = 0;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    const center = options.center || {};\r\n\r\n    this.fanColor = options.fanColor || COLOR.green;\r\n\r\n    this.centerColor = center.color || COLOR.green;\r\n    this.centerBgColor = center.bgColor || COLOR.white;\r\n\r\n    this.speed = options.speed || 1;\r\n  }\r\n\r\n  drawObject() {\r\n    this._degree = Utility.getNextAngleByDegree(this._degree, this.speed);\r\n    const angle = Utility.getAngleByDegree(this._degree);\r\n\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(angle);\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(0, 0);\r\n\r\n    // Up\r\n    this._ctx.quadraticCurveTo(-60, -80, 0, -90);\r\n    this._ctx.quadraticCurveTo(80, -100, 0, 0);\r\n\r\n    // Right\r\n    this._ctx.quadraticCurveTo(80, -60, 90, 0);\r\n    this._ctx.quadraticCurveTo(100, 80, 0, 0);\r\n\r\n    // Down\r\n    this._ctx.quadraticCurveTo(60, 80, 0, 90);\r\n    this._ctx.quadraticCurveTo(-80, 100, 0, 0);\r\n\r\n    // Left\r\n    this._ctx.quadraticCurveTo(-80, 60, -90, 0);\r\n    this._ctx.quadraticCurveTo(-100, -80, 0, 0);\r\n\r\n    this._ctx.fillStyle = this.fanColor;\r\n    this._ctx.fill();\r\n    this._ctx.closePath();\r\n\r\n    this._shape.fillCircle(0, 0, 35, this.centerBgColor);\r\n    this._shape.fillCircle(0, 0, 30, this.centerColor);\r\n    this._shape.fillCircle(0, 0, 10, this.centerBgColor);\r\n  }\r\n}\r\n","\r\nexport default class DigitalSymbol {\r\n\r\n  constructor(ctx, barWidth, numberWidth, numberHeight, dashColor, numberColor) {\r\n    this._ctx = ctx;\r\n    this._barWidth = barWidth;\r\n    this._verBarHeight = (numberHeight - 3 * barWidth) / 2;\r\n    this._horBarHeight = numberWidth - 2 * barWidth;\r\n    this._dashColor = dashColor;\r\n    this._numberColor = numberColor;\r\n  }\r\n\r\n  drawColon() {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._numberColor;\r\n    this._ctx.fillRect(0, (this._verBarHeight * 2 + this._barWidth) / 3, this._barWidth, this._barWidth);\r\n    this._ctx.fillRect(0, (this._verBarHeight * 2 + this._barWidth) / 3 * 2 + this._barWidth,\r\n      this._barWidth, this._barWidth);\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  drawEmpty() {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._dashColor;\r\n    this._ctx.moveTo(0, 0);\r\n    this.topLeft();\r\n    this.bottomLeft();\r\n    this.topRight();\r\n    this.bottomRight();\r\n    this.top();\r\n    this.middle();\r\n    this.bottom();\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  // Vertical: top left\r\n  topLeft() {\r\n    this._ctx.fillRect(0, this._barWidth, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertical: bottom left\r\n  bottomLeft() {\r\n    this._ctx.fillRect(0, this._barWidth * 2 + this._verBarHeight, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertial: top right\r\n  topRight() {\r\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertial: bottom right\r\n  bottomRight() {\r\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth * 2 + this._verBarHeight,\r\n      this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Horizontal: top\r\n  top() {\r\n    this._ctx.fillRect(this._barWidth, 0, this._horBarHeight, this._barWidth);\r\n  }\r\n  // Horizontal: middle\r\n  middle() {\r\n    this._ctx.fillRect(this._barWidth, this._barWidth + this._verBarHeight, this._horBarHeight, this._barWidth);\r\n  }\r\n\r\n  // Horizontal: bottom\r\n  bottom() {\r\n    this._ctx.fillRect(this._barWidth, this._barWidth * 2 + this._verBarHeight * 2, this._horBarHeight, this._barWidth);\r\n  }\r\n\r\n  drawNumber(number) {\r\n    this.drawEmpty();\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._numberColor;\r\n\r\n    switch (number) {\r\n      case 0:\r\n        this.top();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 1:\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 2:\r\n        this.top();\r\n        this.topRight();\r\n        this.middle();\r\n        this.bottomLeft();\r\n        this.bottom();\r\n        break;\r\n      case 3:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 4:\r\n        this.middle();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 5:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 6:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.bottomLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 7:\r\n        this.top();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 8:\r\n        this.topLeft();\r\n        this.bottomLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        break;\r\n      case 9:\r\n        this.top();\r\n        this.middle();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n    }\r\n    this._ctx.closePath();\r\n  }\r\n}\r\n","import Utility from './utility';\r\nimport { COLOR } from './color';\r\nimport BaseComponent from './base-component';\r\nimport DigitalSymbol from './digital-symbol';\r\n\r\nexport default class DigitalClock extends BaseComponent {\r\n\r\n  constructor(canavs, options = {}) {\r\n    super(canavs, options, 400, 100);\r\n\r\n    this._barWidth = 8;\r\n    this._space = 12;\r\n    this._numberWidth = 50;\r\n    this._numberHeight = 100;\r\n\r\n    this._ds = new DigitalSymbol(this._ctx, this._barWidth, this._numberWidth,\r\n      this._numberHeight, this._dashColor, this._numberColor);\r\n    this._timer = null;\r\n\r\n  }\r\n\r\n  postConstructor() {\r\n    this.tick();\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._numberColor = options.numberColor || COLOR.red;\r\n    this._dashColor = options.dashColor || COLOR.lightGrey;\r\n    this._hourOffset = options.hourOffset || 0;\r\n  }\r\n\r\n  destroy() {\r\n    this.stopTick();\r\n    super.destroy();\r\n  }\r\n\r\n  tick() {\r\n    if (this._timer == null) {\r\n      this._timer = setInterval(() => {\r\n        this.drawTime();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  stopTick() {\r\n    if (this._timer != null) {\r\n      clearInterval(this._timer);\r\n      this._timer = null;\r\n    }\r\n  }\r\n\r\n  drawTime() {\r\n    let now = Utility.addHour(this._hourOffset);\r\n\r\n    this.clear();\r\n    this.save();\r\n\r\n    this.drawTwoDigits(this._ds, now.getHours(), this._numberWidth + this._space);\r\n    this._ds.drawColon();\r\n    this._ctx.translate(this._barWidth + this._space, 0);\r\n    this.drawTwoDigits(this._ds, now.getMinutes(), this._numberWidth + this._space);\r\n    this._ds.drawColon();\r\n    this._ctx.translate(this._barWidth + this._space, 0);\r\n    this.drawTwoDigits(this._ds, now.getSeconds(), this._numberWidth + this._space);\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  drawTwoDigits(digitalNumber, time, space) {\r\n    if (time < 10) {\r\n      digitalNumber.drawNumber(0);\r\n      this._ctx.translate(space, 0);\r\n      digitalNumber.drawNumber(time);\r\n      this._ctx.translate(space, 0);\r\n    } else {\r\n      let left = Math.floor(time / 10);\r\n      let right = time % 10;\r\n\r\n      digitalNumber.drawNumber(left);\r\n      this._ctx.translate(space, 0);\r\n      digitalNumber.drawNumber(right);\r\n      this._ctx.translate(space, 0);\r\n    }\r\n  }\r\n}\r\n","\r\nexport default class Shape {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} ctx contect from canvas.getContext('2d')\r\n   */\r\n  constructor(ctx) {\r\n    this._ctx = ctx;\r\n  }\r\n\r\n  /**\r\n   * Create a filled rectangle\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {string} fillStyle\r\n   */\r\n  fillRect(x1, y1, x2, y2, fillStyle) {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = fillStyle;\r\n    this._ctx.fillRect(x1, y1, x2, y2);\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * Create a filled triangle\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @param {string} fillStyle\r\n   */\r\n  fillTriangle(x1, y1, x2, y2, x3, y3, fillStyle) {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = fillStyle;\r\n    this._ctx.moveTo(x1, y1);\r\n    this._ctx.lineTo(x2, y2);\r\n    this._ctx.lineTo(x3, y3);\r\n    this._ctx.fill();\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * Create a filled text\r\n   * @param {string} text\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {string} font\r\n   * @param {string} textAlign\r\n   * @param {string} fillStyle\r\n   */\r\n  fillText(text, x, y, font, textAlign, fillStyle) {\r\n    this._ctx.beginPath();\r\n    this._ctx.font = font;\r\n    this._ctx.textAlign = textAlign;\r\n    this._ctx.fillStyle = fillStyle;\r\n    this._ctx.fillText(text, x, y);\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * Create a line\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} lineWidth\r\n   * @param {string} strokeStyle\r\n   */\r\n  line(x1, y1, x2, y2, lineWidth, strokeStyle) {\r\n    this._ctx.beginPath();\r\n    this._ctx.lineWidth = lineWidth;\r\n    this._ctx.strokeStyle = strokeStyle;\r\n    this._ctx.moveTo(x1, y1);\r\n    this._ctx.lineTo(x2, y2);\r\n    this._ctx.closePath();\r\n    this._ctx.stroke();\r\n  }\r\n\r\n  /**\r\n   * Create a filled circle\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} radius\r\n   * @param {string} fillStyle\r\n   */\r\n  fillCircle(x, y, radius, fillStyle) {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = fillStyle;\r\n    this._ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    this._ctx.fill();\r\n    this._ctx.closePath();\r\n  }\r\n}\r\n","import { COLOR } from './color';\r\nimport Utility from './utility';\r\nimport BaseComponent from './base-component';\r\n\r\nexport default class BarMeter extends BaseComponent {\r\n\r\n  constructor(canvas, options = {}) {\r\n    const viewWidth = options.viewWidth || 100;\r\n\r\n    super(canvas, options, viewWidth, 200);\r\n\r\n    this._barWidth = this._viewWidth - 2 * this._space;\r\n    this._barHeight = 15;\r\n    this._currBar = 0;\r\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\r\n    this._barMax = this._numberOfBars * 100;\r\n  }\r\n\r\n  setOptions(options = {}) {\r\n    this._min = options.min || 0;\r\n    this._max = options.max || 100;\r\n    this._value = options.value || 0;\r\n    this.dashColor = options.dashColor || COLOR.grey;\r\n    this.barColor = options.barColor || COLOR.green;\r\n    this.speed = options.speed || 5;\r\n    this._isGradient = options.gradient || false;\r\n    this._space = options.space || 20;\r\n  }\r\n\r\n  drawObject() {\r\n    // Draw the dash.\r\n    for (let i = 0; i < 10; i++) {\r\n      let y = 5 + i * 20;\r\n\r\n      this._shape.fillRect(this._space, y, this._barWidth, this._barHeight, this.dashColor);\r\n    }\r\n\r\n    // Draw bars.\r\n    if (this._currBar >= this._barMax) {\r\n      this._currBar = -100;\r\n    } else {\r\n      let bar = this._currBar / 100;\r\n\r\n      let colors = [];\r\n\r\n      if (this._isGradient) {\r\n        colors = Utility.generateGradientColor(COLOR.white, this.barColor, bar);\r\n      } else {\r\n        this._ctx.fillStyle = this.barColor;\r\n      }\r\n\r\n      for (let i = 0; i < bar; i++) {\r\n        let y = this._viewHeight - (15 + i * 20);\r\n\r\n        if (this._isGradient) {\r\n          this._ctx.fillStyle = '#' + colors[i];\r\n        }\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.fillRect(this._space, y, this._barWidth, this._barHeight);\r\n        this._ctx.closePath();\r\n      }\r\n\r\n      this._currBar += this.speed;\r\n    }\r\n  }\r\n\r\n  set value(value) {\r\n    this._value = value;\r\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\r\n    this._barMax = this._numberOfBars * 100;\r\n  }\r\n\r\n  get valuePct() {\r\n    return Math.floor((this._value - this._min) / (this._max - this._min) * 100);\r\n  }\r\n}\r\n\r\n","import AnimationTimer from './animation-timer';\r\nimport Settings from './settings';\r\nimport BarMeter from './bar-meter';\r\nimport DigitalClock from './digital-clock';\r\nimport RoundFan from './round-fan';\r\nimport VolumeMeter from './volume-meter';\r\nimport Heartbeat from './heartbeat';\r\nimport MessageQueue from './message-queue';\r\nimport TextMeter from './text-meter';\r\nimport SpeedCircle from './speed-circle';\r\nimport TextBox from './text-box';\r\nimport NetworkGraph from './network-graph';\r\nimport HexGrid from './hex-grid';\r\nimport ScoreBoard from './score-board';\r\n\r\nexport {\r\n  Settings,\r\n  BarMeter,\r\n  DigitalClock,\r\n  VolumeMeter,\r\n  Heartbeat,\r\n  MessageQueue,\r\n  SpeedCircle,\r\n  TextMeter,\r\n  RoundFan,\r\n  TextBox,\r\n  NetworkGraph,\r\n  HexGrid,\r\n  ScoreBoard\r\n};\r\n\r\n// Fire up window.requestAnimationFrame()\r\nAnimationTimer.render();\r\n"],"sourceRoot":""}